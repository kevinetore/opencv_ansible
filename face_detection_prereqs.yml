---
- hosts: all
  become: true
  vars:
    tmp_path: "/home/odroid/setup/download" 
    opencv_version: 4.7.0
    python_packages:
      - name: opencv-python
        version: latest

  tasks:
  - name: Check if swapfile exists
    stat:
      path: /swapfile
    register: swapfile_check

  - name: Create 4GB swapfile
    command: fallocate -l 4G /swapfile
    when: swapfile_check.stat.exists == False
    register: fallocate_result
    ignore_errors: true

  - name: Set up the swapfile
    command: mkswap /swapfile
    when: fallocate_result.changed

  - name: Enable the swapfile
    command: swapon /swapfile
    when: fallocate_result.changed

  - name: Install developer and compile tools
    apt: 
      name:
      - build-essential
      - cmake
      - git
      - pkg-config
      - unzip
      - python3-dev
      - libopenblas-dev
      - liblapack-dev
      - libx11-dev
      - libgtk-3-dev
      - libatlas-base-dev
      - libboost-python-dev
      state: latest

  - name: Create tmp directory
    file:
      path: "{{ tmp_path }}"
      state: directory

  - name: Install python packages
    pip:
      name: "{{ item.name }}"
      version: "{{ item.version }}"
      executable: pip3
    with_items: "{{ python_packages }}"
    notify:
      - test python packages
      
  - name: Install mediapipe
    pip: 
      name: "mediapipe-rpi4"
      executable: pip3

  - name: Download and unzip OpenCV
    unarchive:
      src: "https://github.com/opencv/opencv/archive/{{ opencv_version }}.zip"
      dest: "{{ tmp_path }}"
      copy: no

  - name: Create build directory
    file:
      path: "{{ tmp_path }}/opencv-{{ opencv_version }}/build"
      state: directory

  - name: Make the opencv build artifacts
    shell: |
      cmake -D CMAKE_BUILD_TYPE=RELEASE \
      -D CMAKE_INSTALL_PREFIX=/usr/local \
      -D BUILD_TESTS=OFF \
      -D BUILD_PERF_TESTS=OFF \
      -D WITH_TBB=ON \
      -D WITH_OPENMP=ON \
      -D WITH_NEON=ON \
      -D INSTALL_C_EXAMPLES=OFF \
      -D INSTALL_PYTHON_EXAMPLES=OFF \
      -D BUILD_EXAMPLES=ON {{ tmp_path }}/opencv-{{ opencv_version }}
    args:
      chdir: "{{ tmp_path }}/opencv-{{ opencv_version }}/build"
      executable: /bin/bash

  - name: Disable the swapfile
    command: swapoff -av

  - name: Remove the swapfile
    command: rm -f /swapfile

  handlers:
    - name: test python packages
      command: python3 -c "import {{ item.name }}"
      with_items: "{{ python_packages }}"
      register: test_results
      notify: print test results

    - name: print test results
      debug:
        msg: "{{ test_results }}"
