---
- hosts: all
  become: yes
  vars:
    main_path: "{{ ansible_env.HOME }}/projects/ansible_scripts"
    tmp_path: "{{ ansible_env.HOME }}/setup/download" 
    opencv_version: 4.7.0

  tasks:
  - name: Install developer and compile tools
    apt: 
      name:
      - build-essential
      - cmake
      - git
      - pkg-config
      - unzip
      state: latest

  - name: Create tmp download dir
    file:
      path: "{{ tmp_path }}"
      state: directory

  - name: Download pip3 installer
    get_url:
      url: https://bootstrap.pypa.io/get-pip.py
      dest: "{{ tmp_path }}"

  - name: Get fqpn of installed pip3 dir
    shell: pwd
    args:
      chdir: "{{ tmp_path }}"
    register: pwd_result

  - name: Install pip3
    command: python3 {{ pwd_result.stdout }}/get-pip.py
  
  - name: Install numpy
    command: "/usr/local/bin/pip install numpy"
  
  - name: Download and unzip OpenCV
    unarchive:
      src: "https://github.com/opencv/opencv/archive/{{ opencv_version }}.zip"
      dest: "{{ tmp_path }}"
      copy: no

  - name: Download and unzip OpenCV contrib
    unarchive:
      src: "https://github.com/opencv/opencv_contrib/archive/{{ opencv_version }}.zip"
      dest: "{{ tmp_path }}"
      copy: no

  - name: Create build directory
    file:
      path: "{{ tmp_path }}/opencv-{{ opencv_version }}/build"
      state: directory

  - name: Make the opencv build artifacts
    shell: |
      cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=ON -D OPENCV_EXTRA_MODULES_PATH={{ tmp_path }}/opencv_contrib-{{ opencv_version }}/modules -D BUILD_EXAMPLES=ON {{ tmp_path }}/opencv-{{ opencv_version }}
    args:
      chdir: "{{ tmp_path }}/opencv-{{ opencv_version }}/build"
      executable: /bin/bash

  - name: Compile the opencv project
    shell: make -j 4
    args:
      chdir: "{{ tmp_path }}/opencv-{{ opencv_version }}/build"
      executable: /bin/bash

  - name: Register pwd for installation	
    shell: pwd
    args:
      chdir: "{{ tmp_path }}"
    register: pwd_result

  - name: Install opencv
    become: true
    shell: |
      make install
      ldconfig
    args:
      chdir: "{{ pwd_result.stdout }}/opencv-{{ opencv_version }}/build"
      executable: /bin/bash

  - name: Remove tmp dir
    file:
      state: absent
      path: "{{ tmp_path }}"

  - name: Test opencv installation
    command: python3 -c "import cv2"
    register: test_opencv_installation

  - name: print test_opencv_installation output
    debug:
      msg: "{{ test_opencv_installation }}"

  - name: Install Dlib with pip3
    pip:
      name: dlib
      executable: pip3

  - name: Test dlib installation
    command: python3 -c "import dlib"
    register: test_dlib_installation

  - name: print test_dlib_installation output
    debug:
      msg: "{{ test_dlib_installation }}"
